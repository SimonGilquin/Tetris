// Generated by CoffeeScript 1.6.3
(function() {
  var DrawAll, GetChar, canvas, context, current, elements, grid, gridMaxX, gridMaxY, play,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  context = null;

  elements = [];

  canvas = null;

  gridMaxX = 20;

  gridMaxY = 40;

  grid = {
    draw: function() {
      var i, _i, _j, _results;
      context.beginPath();
      for (i = _i = 0; _i <= gridMaxX; i = _i += 1) {
        context.moveTo(i * 15, 0);
        context.lineTo(i * 15, gridMaxY * 15);
        context.stroke();
      }
      _results = [];
      for (i = _j = 0; _j <= gridMaxY; i = _j += 1) {
        context.moveTo(0, i * 15);
        context.lineTo(gridMaxX * 15, i * 15);
        _results.push(context.stroke());
      }
      return _results;
    }
  };

  current = {
    x: gridMaxX / 2,
    y: -1,
    draw: function() {
      context.beginPath();
      context.rect((this.x * 15) + 1, (this.y * 15) + 1, 13, 13);
      context.fillStyle = 'yellow';
      context.fill();
      return console.log(this.x + " - " + this.y);
    }
  };

  window.onload = function() {
    canvas = document.createElement('canvas');
    canvas.width = gridMaxX * 15;
    canvas.height = gridMaxY * 15;
    canvas.style.backgroundColor = "yellowgreen";
    document.body.appendChild(canvas);
    context = canvas.getContext('2d');
    return setInterval(play, 60);
  };

  DrawAll = function() {
    var element, _i, _len, _results,
      _this = this;
    context.clearRect(0, 0, canvas.width, canvas.height);
    grid.draw();
    current.draw();
    _results = [];
    for (_i = 0, _len = elements.length; _i < _len; _i++) {
      element = elements[_i];
      _results.push((function() {
        context.beginPath();
        context.rect((element.x * 15) + 1, (element.y * 15) + 1, 13, 13);
        context.fillStyle = 'yellow';
        return context.fill();
      })());
    }
    return _results;
  };

  play = function() {
    if (current.y < gridMaxY - 1) {
      current.y += 1;
      if (current.y === gridMaxY - 1) {
        elements.push({
          x: current.x,
          y: current.y
        });
        current.y = 0;
      }
    }
    return DrawAll();
  };

  document.onkeydown = function(t) {
    if (t.keyCode === 37 && current.x >= 1) {
      current.x = current.x - 1;
    }
    if (t.keyCode === 39 && current.x < gridMaxX - 1) {
      current.x = current.x + 1;
    }
  };

  GetChar = function(event) {
    if (__indexOf.call(event, 'which') >= 0) {
      return event.which;
    } else {
      return event.keyCode;
    }
  };

}).call(this);
